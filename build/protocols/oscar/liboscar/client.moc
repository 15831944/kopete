/****************************************************************************
** Meta object code from reading C++ file 'client.h'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../../../protocols/oscar/liboscar/client.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'client.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_Oscar__Client[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
      62,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
      40,       // signalCount

 // signals: signature, parameters, type, tag, flags
      28,   15,   14,   14, 0x05,
      63,   14,   14,   14, 0x05,
      74,   14,   14,   14, 0x05,
      88,   14,   14,   14, 0x05,
     103,   14,   14,   14, 0x05,
     124,   14,   14,   14, 0x05,
     138,   14,   14,   14, 0x05,
     156,   14,   14,   14, 0x05,
     178,   14,   14,   14, 0x05,
     201,   14,   14,   14, 0x05,
     251,  233,   14,   14, 0x05,
     276,  233,   14,   14, 0x05,
     318,  303,   14,   14, 0x05,
     375,  355,   14,   14, 0x05,
     421,  415,   14,   14, 0x05,
     462,  446,   14,   14, 0x05,
     506,  494,   14,   14, 0x05,
     539,  531,   14,   14, 0x05,
     569,  531,   14,   14, 0x05,
     598,  531,   14,   14, 0x05,
     642,  626,   14,   14, 0x05,
     691,  675,   14,   14, 0x05,
     755,  728,   14,   14, 0x05,
     823,  807,   14,   14, 0x05,
     861,  531,   14,   14, 0x05,
     919,  893,   14,   14, 0x05,
     955,   14,   14,   14, 0x05,
     989,   14,   14,   14, 0x05,
    1006,  531,   14,   14, 0x05,
    1033,  531,   14,   14, 0x05,
    1070, 1060,   14,   14, 0x05,
    1109,   14,   14,   14, 0x05,
    1131,   14,   14,   14, 0x05,
    1152,   14,   14,   14, 0x05,
    1180, 1178,   14,   14, 0x05,
    1233, 1219,   14,   14, 0x05,
    1277, 1219,   14,   14, 0x05,
    1327, 1319,   14,   14, 0x05,
    1361,   14,   14,   14, 0x05,
    1394, 1319,   14,   14, 0x05,

 // slots: signature, parameters, type, tag, flags
    1455, 1437,   14,   14, 0x0a,
    1481,   14,   14,   14, 0x09,
    1497,   14,   14,   14, 0x09,
    1516,   14,   14,   14, 0x09,
    1534,   14,   14,   14, 0x09,
    1552,   14,   14,   14, 0x09,
    1588, 1575,   14,   14, 0x09,
    1627, 1618,   14,   14, 0x09,
    1658, 1654,   14,   14, 0x09,
    1690, 1654,   14,   14, 0x09,
    1722, 1718,   14,   14, 0x09,
    1779, 1768,   14,   14, 0x09,
    1825, 1178,   14,   14, 0x09,
    1877, 1858,   14,   14, 0x09,
    1931,   14,   14,   14, 0x09,
    1956,   14,   14,   14, 0x09,
    1991,   14,   14,   14, 0x09,
    2024, 2014,   14,   14, 0x09,
    2056, 1718,   14,   14, 0x09,
    2120, 1178,   14,   14, 0x09,
    2156,   14,   14,   14, 0x09,
    2184,   14,   14,   14, 0x09,

       0        // eod
};

static const char qt_meta_stringdata_Oscar__Client[] = {
    "Oscar::Client\0\0clientStream\0"
    "createClientStream(ClientStream**)\0"
    "loggedIn()\0loginFailed()\0disconnected()\0"
    "connectedElsewhere()\0haveOwnInfo()\0"
    "haveContactList()\0userIsOnline(QString)\0"
    "userIsOffline(QString)\0"
    "messageReceived(Oscar::Message)\0"
    "contact,messageId\0messageAck(QString,uint)\0"
    "messageError(QString,uint)\0contact,reason\0"
    "authRequestReceived(QString,QString)\0"
    "contact,reason,auth\0"
    "authReplyReceived(QString,QString,bool)\0"
    "error\0icqPasswordChanged(bool)\0"
    "s,errCode,fatal\0taskError(Oscar::SNAC,int,bool)\0"
    "errCode,msg\0socketError(int,QString)\0"
    "contact\0receivedIcqShortInfo(QString)\0"
    "receivedIcqLongInfo(QString)\0"
    "receivedIcqTlvInfo(QString)\0contact,profile\0"
    "receivedProfile(QString,QString)\0"
    "contact,message\0receivedAwayMessage(QString,QString)\0"
    "contact,icon,title,message\0"
    "receivedXStatusMessage(QString,int,QString,QString)\0"
    "contact,details\0receivedUserInfo(QString,UserDetails)\0"
    "userReadsStatusMessage(QString)\0"
    "contact,increase,newLevel\0"
    "userWarned(QString,quint16,quint16)\0"
    "gotSearchResults(ICQSearchResult)\0"
    "endOfSearch(int)\0userStartedTyping(QString)\0"
    "userStoppedTyping(QString)\0,iconData\0"
    "haveIconForContact(QString,QByteArray)\0"
    "iconServerConnected()\0iconNeedsUploading()\0"
    "chatNavigationConnected()\0,\0"
    "chatRoomConnected(Oscar::WORD,QString)\0"
    ",room,contact\0userJoinedChat(Oscar::WORD,QString,QString)\0"
    "userLeftChat(Oscar::WORD,QString,QString)\0"
    "handler\0chatroomRequest(ChatRoomHandler*)\0"
    "redirectionFinished(Oscar::WORD)\0"
    "incomingFileTransfer(FileTransferHandler*)\0"
    "roomName,exchange\0joinChatRoom(QString,int)\0"
    "startStageTwo()\0lt_loginFinished()\0"
    "streamConnected()\0haveOwnUserInfo()\0"
    "serviceSetupFinished()\0contact,type\0"
    "receivedIcqInfo(QString,uint)\0sequence\0"
    "receivedInfo(Oscar::DWORD)\0msg\0"
    "receivedMessage(Oscar::Message)\0"
    "fileMessage(Oscar::Message)\0,,,\0"
    "gotFileMessage(int,QString,QByteArray,Buffer)\0"
    "msg,cookie\0gotChatRoomMessage(Oscar::Message,QByteArray)\0"
    "offlineUser(QString,UserDetails)\0"
    "host,cookie,family\0"
    "haveServerForRedirect(QString,QByteArray,Oscar::WORD)\0"
    "serverRedirectFinished()\0"
    "checkRedirectionQueue(Oscar::WORD)\0"
    "requestChatNavLimits()\0exchanges\0"
    "setChatExchangeList(QList<int>)\0"
    "setupChatConnection(Oscar::WORD,QByteArray,Oscar::WORD,QString)\0"
    "determineDisconnection(int,QString)\0"
    "nextICQAwayMessageRequest()\0"
    "changeICQPasswordFinished()\0"
};

void Oscar::Client::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        Client *_t = static_cast<Client *>(_o);
        switch (_id) {
        case 0: _t->createClientStream((*reinterpret_cast< ClientStream**(*)>(_a[1]))); break;
        case 1: _t->loggedIn(); break;
        case 2: _t->loginFailed(); break;
        case 3: _t->disconnected(); break;
        case 4: _t->connectedElsewhere(); break;
        case 5: _t->haveOwnInfo(); break;
        case 6: _t->haveContactList(); break;
        case 7: _t->userIsOnline((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 8: _t->userIsOffline((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 9: _t->messageReceived((*reinterpret_cast< const Oscar::Message(*)>(_a[1]))); break;
        case 10: _t->messageAck((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 11: _t->messageError((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 12: _t->authRequestReceived((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 13: _t->authReplyReceived((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3]))); break;
        case 14: _t->icqPasswordChanged((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 15: _t->taskError((*reinterpret_cast< const Oscar::SNAC(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3]))); break;
        case 16: _t->socketError((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 17: _t->receivedIcqShortInfo((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 18: _t->receivedIcqLongInfo((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 19: _t->receivedIcqTlvInfo((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 20: _t->receivedProfile((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 21: _t->receivedAwayMessage((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 22: _t->receivedXStatusMessage((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4]))); break;
        case 23: _t->receivedUserInfo((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const UserDetails(*)>(_a[2]))); break;
        case 24: _t->userReadsStatusMessage((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 25: _t->userWarned((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< quint16(*)>(_a[2])),(*reinterpret_cast< quint16(*)>(_a[3]))); break;
        case 26: _t->gotSearchResults((*reinterpret_cast< const ICQSearchResult(*)>(_a[1]))); break;
        case 27: _t->endOfSearch((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 28: _t->userStartedTyping((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 29: _t->userStoppedTyping((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 30: _t->haveIconForContact((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< QByteArray(*)>(_a[2]))); break;
        case 31: _t->iconServerConnected(); break;
        case 32: _t->iconNeedsUploading(); break;
        case 33: _t->chatNavigationConnected(); break;
        case 34: _t->chatRoomConnected((*reinterpret_cast< Oscar::WORD(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 35: _t->userJoinedChat((*reinterpret_cast< Oscar::WORD(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 36: _t->userLeftChat((*reinterpret_cast< Oscar::WORD(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 37: _t->chatroomRequest((*reinterpret_cast< ChatRoomHandler*(*)>(_a[1]))); break;
        case 38: _t->redirectionFinished((*reinterpret_cast< Oscar::WORD(*)>(_a[1]))); break;
        case 39: _t->incomingFileTransfer((*reinterpret_cast< FileTransferHandler*(*)>(_a[1]))); break;
        case 40: _t->joinChatRoom((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 41: _t->startStageTwo(); break;
        case 42: _t->lt_loginFinished(); break;
        case 43: _t->streamConnected(); break;
        case 44: _t->haveOwnUserInfo(); break;
        case 45: _t->serviceSetupFinished(); break;
        case 46: _t->receivedIcqInfo((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 47: _t->receivedInfo((*reinterpret_cast< Oscar::DWORD(*)>(_a[1]))); break;
        case 48: _t->receivedMessage((*reinterpret_cast< const Oscar::Message(*)>(_a[1]))); break;
        case 49: _t->fileMessage((*reinterpret_cast< const Oscar::Message(*)>(_a[1]))); break;
        case 50: _t->gotFileMessage((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QByteArray(*)>(_a[3])),(*reinterpret_cast< Buffer(*)>(_a[4]))); break;
        case 51: _t->gotChatRoomMessage((*reinterpret_cast< const Oscar::Message(*)>(_a[1])),(*reinterpret_cast< const QByteArray(*)>(_a[2]))); break;
        case 52: _t->offlineUser((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const UserDetails(*)>(_a[2]))); break;
        case 53: _t->haveServerForRedirect((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QByteArray(*)>(_a[2])),(*reinterpret_cast< Oscar::WORD(*)>(_a[3]))); break;
        case 54: _t->serverRedirectFinished(); break;
        case 55: _t->checkRedirectionQueue((*reinterpret_cast< Oscar::WORD(*)>(_a[1]))); break;
        case 56: _t->requestChatNavLimits(); break;
        case 57: _t->setChatExchangeList((*reinterpret_cast< const QList<int>(*)>(_a[1]))); break;
        case 58: _t->setupChatConnection((*reinterpret_cast< Oscar::WORD(*)>(_a[1])),(*reinterpret_cast< QByteArray(*)>(_a[2])),(*reinterpret_cast< Oscar::WORD(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4]))); break;
        case 59: _t->determineDisconnection((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 60: _t->nextICQAwayMessageRequest(); break;
        case 61: _t->changeICQPasswordFinished(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData Oscar::Client::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject Oscar::Client::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Oscar__Client,
      qt_meta_data_Oscar__Client, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &Oscar::Client::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *Oscar::Client::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *Oscar::Client::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_Oscar__Client))
        return static_cast<void*>(const_cast< Client*>(this));
    return QObject::qt_metacast(_clname);
}

int Oscar::Client::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 62)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 62;
    }
    return _id;
}

// SIGNAL 0
void Oscar::Client::createClientStream(ClientStream * * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void Oscar::Client::loggedIn()
{
    QMetaObject::activate(this, &staticMetaObject, 1, 0);
}

// SIGNAL 2
void Oscar::Client::loginFailed()
{
    QMetaObject::activate(this, &staticMetaObject, 2, 0);
}

// SIGNAL 3
void Oscar::Client::disconnected()
{
    QMetaObject::activate(this, &staticMetaObject, 3, 0);
}

// SIGNAL 4
void Oscar::Client::connectedElsewhere()
{
    QMetaObject::activate(this, &staticMetaObject, 4, 0);
}

// SIGNAL 5
void Oscar::Client::haveOwnInfo()
{
    QMetaObject::activate(this, &staticMetaObject, 5, 0);
}

// SIGNAL 6
void Oscar::Client::haveContactList()
{
    QMetaObject::activate(this, &staticMetaObject, 6, 0);
}

// SIGNAL 7
void Oscar::Client::userIsOnline(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}

// SIGNAL 8
void Oscar::Client::userIsOffline(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 8, _a);
}

// SIGNAL 9
void Oscar::Client::messageReceived(const Oscar::Message & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 9, _a);
}

// SIGNAL 10
void Oscar::Client::messageAck(const QString & _t1, uint _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 10, _a);
}

// SIGNAL 11
void Oscar::Client::messageError(const QString & _t1, uint _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 11, _a);
}

// SIGNAL 12
void Oscar::Client::authRequestReceived(const QString & _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 12, _a);
}

// SIGNAL 13
void Oscar::Client::authReplyReceived(const QString & _t1, const QString & _t2, bool _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 13, _a);
}

// SIGNAL 14
void Oscar::Client::icqPasswordChanged(bool _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 14, _a);
}

// SIGNAL 15
void Oscar::Client::taskError(const Oscar::SNAC & _t1, int _t2, bool _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 15, _a);
}

// SIGNAL 16
void Oscar::Client::socketError(int _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 16, _a);
}

// SIGNAL 17
void Oscar::Client::receivedIcqShortInfo(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 17, _a);
}

// SIGNAL 18
void Oscar::Client::receivedIcqLongInfo(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 18, _a);
}

// SIGNAL 19
void Oscar::Client::receivedIcqTlvInfo(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 19, _a);
}

// SIGNAL 20
void Oscar::Client::receivedProfile(const QString & _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 20, _a);
}

// SIGNAL 21
void Oscar::Client::receivedAwayMessage(const QString & _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 21, _a);
}

// SIGNAL 22
void Oscar::Client::receivedXStatusMessage(const QString & _t1, int _t2, const QString & _t3, const QString & _t4)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)), const_cast<void*>(reinterpret_cast<const void*>(&_t4)) };
    QMetaObject::activate(this, &staticMetaObject, 22, _a);
}

// SIGNAL 23
void Oscar::Client::receivedUserInfo(const QString & _t1, const UserDetails & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 23, _a);
}

// SIGNAL 24
void Oscar::Client::userReadsStatusMessage(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 24, _a);
}

// SIGNAL 25
void Oscar::Client::userWarned(const QString & _t1, quint16 _t2, quint16 _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 25, _a);
}

// SIGNAL 26
void Oscar::Client::gotSearchResults(const ICQSearchResult & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 26, _a);
}

// SIGNAL 27
void Oscar::Client::endOfSearch(int _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 27, _a);
}

// SIGNAL 28
void Oscar::Client::userStartedTyping(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 28, _a);
}

// SIGNAL 29
void Oscar::Client::userStoppedTyping(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 29, _a);
}

// SIGNAL 30
void Oscar::Client::haveIconForContact(const QString & _t1, QByteArray _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 30, _a);
}

// SIGNAL 31
void Oscar::Client::iconServerConnected()
{
    QMetaObject::activate(this, &staticMetaObject, 31, 0);
}

// SIGNAL 32
void Oscar::Client::iconNeedsUploading()
{
    QMetaObject::activate(this, &staticMetaObject, 32, 0);
}

// SIGNAL 33
void Oscar::Client::chatNavigationConnected()
{
    QMetaObject::activate(this, &staticMetaObject, 33, 0);
}

// SIGNAL 34
void Oscar::Client::chatRoomConnected(Oscar::WORD _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 34, _a);
}

// SIGNAL 35
void Oscar::Client::userJoinedChat(Oscar::WORD _t1, const QString & _t2, const QString & _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 35, _a);
}

// SIGNAL 36
void Oscar::Client::userLeftChat(Oscar::WORD _t1, const QString & _t2, const QString & _t3)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 36, _a);
}

// SIGNAL 37
void Oscar::Client::chatroomRequest(ChatRoomHandler * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 37, _a);
}

// SIGNAL 38
void Oscar::Client::redirectionFinished(Oscar::WORD _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 38, _a);
}

// SIGNAL 39
void Oscar::Client::incomingFileTransfer(FileTransferHandler * _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 39, _a);
}
QT_END_MOC_NAMESPACE
