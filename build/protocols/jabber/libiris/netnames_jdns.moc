/****************************************************************************
** Meta object code from reading C++ file 'netnames_jdns.cpp'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'netnames_jdns.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_XMPP__JDnsGlobal[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       5,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      18,   17,   17,   17, 0x05,

 // slots: signature, parameters, type, tag, flags
      38,   17,   17,   17, 0x08,
      59,   56,   17,   17, 0x08,
      84,   17,   17,   17, 0x08,
     104,   17,   17,   17, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsGlobal[] = {
    "XMPP::JDnsGlobal\0\0interfacesChanged()\0"
    "jdns_debugReady()\0id\0iface_available(QString)\0"
    "iface_unavailable()\0doUpdateMulticastInterfaces()\0"
};

void XMPP::JDnsGlobal::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsGlobal *_t = static_cast<JDnsGlobal *>(_o);
        switch (_id) {
        case 0: _t->interfacesChanged(); break;
        case 1: _t->jdns_debugReady(); break;
        case 2: _t->iface_available((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 3: _t->iface_unavailable(); break;
        case 4: _t->doUpdateMulticastInterfaces(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsGlobal::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsGlobal::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsGlobal,
      qt_meta_data_XMPP__JDnsGlobal, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsGlobal::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsGlobal::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsGlobal::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsGlobal))
        return static_cast<void*>(const_cast< JDnsGlobal*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsGlobal::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 5)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsGlobal::interfacesChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
static const uint qt_meta_data_XMPP__JDnsNameProvider[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       5,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: signature, parameters, type, tag, flags
      24,   23,   23,   23, 0x08,
      48,   43,   23,   23, 0x08,
      96,   88,   23,   23, 0x08,
     132,  121,   23,   23, 0x08,
     176,   43,   23,   23, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsNameProvider[] = {
    "XMPP::JDnsNameProvider\0\0req_resultsReady()\0"
    "id,e\0do_error(int,XMPP::NameResolver::Error)\0"
    "id,name\0do_local(int,QByteArray)\0"
    "id,results\0do_local_ready(int,QList<XMPP::NameRecord>)\0"
    "do_local_error(int,XMPP::NameResolver::Error)\0"
};

void XMPP::JDnsNameProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsNameProvider *_t = static_cast<JDnsNameProvider *>(_o);
        switch (_id) {
        case 0: _t->req_resultsReady(); break;
        case 1: _t->do_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::NameResolver::Error(*)>(_a[2]))); break;
        case 2: _t->do_local((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QByteArray(*)>(_a[2]))); break;
        case 3: _t->do_local_ready((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QList<XMPP::NameRecord>(*)>(_a[2]))); break;
        case 4: _t->do_local_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::NameResolver::Error(*)>(_a[2]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsNameProvider::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsNameProvider::staticMetaObject = {
    { &NameProvider::staticMetaObject, qt_meta_stringdata_XMPP__JDnsNameProvider,
      qt_meta_data_XMPP__JDnsNameProvider, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsNameProvider::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsNameProvider::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsNameProvider::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsNameProvider))
        return static_cast<void*>(const_cast< JDnsNameProvider*>(this));
    if (!strcmp(_clname, "com.affinix.irisnet.NameProvider/1.0"))
        return static_cast< XMPP::NameProvider*>(const_cast< JDnsNameProvider*>(this));
    return NameProvider::qt_metacast(_clname);
}

int XMPP::JDnsNameProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = NameProvider::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 5)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    }
    return _id;
}
static const uint qt_meta_data_XMPP__JDnsBrowse[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      27,   18,   17,   17, 0x05,
      49,   18,   17,   17, 0x05,

 // slots: signature, parameters, type, tag, flags
      73,   17,   17,   17, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsBrowse[] = {
    "XMPP::JDnsBrowse\0\0instance\0"
    "available(QByteArray)\0unavailable(QByteArray)\0"
    "jdns_resultsReady()\0"
};

void XMPP::JDnsBrowse::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsBrowse *_t = static_cast<JDnsBrowse *>(_o);
        switch (_id) {
        case 0: _t->available((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 1: _t->unavailable((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 2: _t->jdns_resultsReady(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsBrowse::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsBrowse::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsBrowse,
      qt_meta_data_XMPP__JDnsBrowse, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsBrowse::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsBrowse::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsBrowse::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsBrowse))
        return static_cast<void*>(const_cast< JDnsBrowse*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsBrowse::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsBrowse::available(const QByteArray & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void XMPP::JDnsBrowse::unavailable(const QByteArray & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
static const uint qt_meta_data_XMPP__JDnsServiceResolve[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      26,   25,   25,   25, 0x05,
      39,   37,   25,   25, 0x05,

 // slots: signature, parameters, type, tag, flags
      72,   25,   25,   25, 0x08,
      87,   25,   25,   25, 0x08,
      99,   25,   25,   25, 0x08,
     112,   25,   25,   25, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsServiceResolve[] = {
    "XMPP::JDnsServiceResolve\0\0finished()\0"
    "e\0error(QJDnsSharedRequest::Error)\0"
    "reqtxt_ready()\0req_ready()\0req6_ready()\0"
    "op_timeout()\0"
};

void XMPP::JDnsServiceResolve::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsServiceResolve *_t = static_cast<JDnsServiceResolve *>(_o);
        switch (_id) {
        case 0: _t->finished(); break;
        case 1: _t->error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        case 2: _t->reqtxt_ready(); break;
        case 3: _t->req_ready(); break;
        case 4: _t->req6_ready(); break;
        case 5: _t->op_timeout(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsServiceResolve::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsServiceResolve::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsServiceResolve,
      qt_meta_data_XMPP__JDnsServiceResolve, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsServiceResolve::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsServiceResolve::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsServiceResolve::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsServiceResolve))
        return static_cast<void*>(const_cast< JDnsServiceResolve*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsServiceResolve::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsServiceResolve::finished()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void XMPP::JDnsServiceResolve::error(QJDnsSharedRequest::Error _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
static const uint qt_meta_data_XMPP__JDnsPublishAddress[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      26,   25,   25,   25, 0x05,

 // slots: signature, parameters, type, tag, flags
      41,   25,   25,   25, 0x08,
      58,   25,   25,   25, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsPublishAddress[] = {
    "XMPP::JDnsPublishAddress\0\0resultsReady()\0"
    "pub_addr_ready()\0pub_ptr_ready()\0"
};

void XMPP::JDnsPublishAddress::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsPublishAddress *_t = static_cast<JDnsPublishAddress *>(_o);
        switch (_id) {
        case 0: _t->resultsReady(); break;
        case 1: _t->pub_addr_ready(); break;
        case 2: _t->pub_ptr_ready(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObjectExtraData XMPP::JDnsPublishAddress::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsPublishAddress::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsPublishAddress,
      qt_meta_data_XMPP__JDnsPublishAddress, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsPublishAddress::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsPublishAddress::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsPublishAddress::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsPublishAddress))
        return static_cast<void*>(const_cast< JDnsPublishAddress*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsPublishAddress::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsPublishAddress::resultsReady()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
static const uint qt_meta_data_XMPP__JDnsPublishAddresses[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       4,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      32,   28,   27,   27, 0x05,

 // slots: signature, parameters, type, tag, flags
      53,   27,   27,   27, 0x08,
      65,   27,   27,   27, 0x08,
      78,   27,   27,   27, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsPublishAddresses[] = {
    "XMPP::JDnsPublishAddresses\0\0str\0"
    "hostName(QByteArray)\0doDisable()\0"
    "pub6_ready()\0pub4_ready()\0"
};

void XMPP::JDnsPublishAddresses::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsPublishAddresses *_t = static_cast<JDnsPublishAddresses *>(_o);
        switch (_id) {
        case 0: _t->hostName((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 1: _t->doDisable(); break;
        case 2: _t->pub6_ready(); break;
        case 3: _t->pub4_ready(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsPublishAddresses::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsPublishAddresses::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsPublishAddresses,
      qt_meta_data_XMPP__JDnsPublishAddresses, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsPublishAddresses::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsPublishAddresses::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsPublishAddresses::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsPublishAddresses))
        return static_cast<void*>(const_cast< JDnsPublishAddresses*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsPublishAddresses::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsPublishAddresses::hostName(const QByteArray & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
static const uint qt_meta_data_XMPP__JDnsPublishExtra[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      24,   23,   23,   23, 0x05,
      38,   36,   23,   23, 0x05,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsPublishExtra[] = {
    "XMPP::JDnsPublishExtra\0\0published()\0"
    "e\0error(QJDnsSharedRequest::Error)\0"
};

void XMPP::JDnsPublishExtra::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsPublishExtra *_t = static_cast<JDnsPublishExtra *>(_o);
        switch (_id) {
        case 0: _t->published(); break;
        case 1: _t->error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsPublishExtra::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsPublishExtra::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsPublishExtra,
      qt_meta_data_XMPP__JDnsPublishExtra, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsPublishExtra::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsPublishExtra::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsPublishExtra::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsPublishExtra))
        return static_cast<void*>(const_cast< JDnsPublishExtra*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsPublishExtra::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsPublishExtra::published()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void XMPP::JDnsPublishExtra::error(QJDnsSharedRequest::Error _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
static const uint qt_meta_data_XMPP__JDnsPublish[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       7,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      19,   18,   18,   18, 0x05,
      33,   31,   18,   18, 0x05,

 // slots: signature, parameters, type, tag, flags
      72,   66,   18,   18, 0x0a,
      96,   18,   18,   18, 0x08,
     112,   18,   18,   18, 0x08,
     128,   18,   18,   18, 0x08,
     144,   18,   18,   18, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsPublish[] = {
    "XMPP::JDnsPublish\0\0published()\0e\0"
    "error(QJDnsSharedRequest::Error)\0_host\0"
    "hostChanged(QByteArray)\0pub_srv_ready()\0"
    "pub_txt_ready()\0pub_ptr_ready()\0"
    "pub_extra_ready()\0"
};

void XMPP::JDnsPublish::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsPublish *_t = static_cast<JDnsPublish *>(_o);
        switch (_id) {
        case 0: _t->published(); break;
        case 1: _t->error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        case 2: _t->hostChanged((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 3: _t->pub_srv_ready(); break;
        case 4: _t->pub_txt_ready(); break;
        case 5: _t->pub_ptr_ready(); break;
        case 6: _t->pub_extra_ready(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsPublish::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsPublish::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_XMPP__JDnsPublish,
      qt_meta_data_XMPP__JDnsPublish, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsPublish::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsPublish::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsPublish::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsPublish))
        return static_cast<void*>(const_cast< JDnsPublish*>(this));
    return QObject::qt_metacast(_clname);
}

int XMPP::JDnsPublish::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 7)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 7;
    }
    return _id;
}

// SIGNAL 0
void XMPP::JDnsPublish::published()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void XMPP::JDnsPublish::error(QJDnsSharedRequest::Error _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
static const uint qt_meta_data_XMPP__JDnsServiceProvider[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: signature, parameters, type, tag, flags
      27,   26,   26,   26, 0x08,
      56,   47,   26,   26, 0x08,
      81,   47,   26,   26, 0x08,
     113,  108,   26,   26, 0x08,
     162,   26,   26,   26, 0x08,
     178,  176,   26,   26, 0x08,
     214,  108,   26,   26, 0x08,
     270,  265,   26,   26, 0x08,
     305,   26,   26,   26, 0x08,
     320,  176,   26,   26, 0x08,
     356,  108,   26,   26, 0x08,
     413,   26,   26,   26, 0x08,
     429,  176,   26,   26, 0x08,
     466,  108,   26,   26, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsServiceProvider[] = {
    "XMPP::JDnsServiceProvider\0\0"
    "interfacesChanged()\0instance\0"
    "jb_available(QByteArray)\0"
    "jb_unavailable(QByteArray)\0id,e\0"
    "do_browse_error(int,XMPP::ServiceBrowser::Error)\0"
    "jr_finished()\0e\0jr_error(QJDnsSharedRequest::Error)\0"
    "do_resolve_error(int,XMPP::ServiceResolver::Error)\0"
    "name\0pub_addresses_hostName(QByteArray)\0"
    "jp_published()\0jp_error(QJDnsSharedRequest::Error)\0"
    "do_publish_error(int,XMPP::ServiceLocalPublisher::Error)\0"
    "jpe_published()\0jpe_error(QJDnsSharedRequest::Error)\0"
    "do_publish_extra_error(int,XMPP::ServiceLocalPublisher::Error)\0"
};

void XMPP::JDnsServiceProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        JDnsServiceProvider *_t = static_cast<JDnsServiceProvider *>(_o);
        switch (_id) {
        case 0: _t->interfacesChanged(); break;
        case 1: _t->jb_available((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 2: _t->jb_unavailable((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 3: _t->do_browse_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::ServiceBrowser::Error(*)>(_a[2]))); break;
        case 4: _t->jr_finished(); break;
        case 5: _t->jr_error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        case 6: _t->do_resolve_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::ServiceResolver::Error(*)>(_a[2]))); break;
        case 7: _t->pub_addresses_hostName((*reinterpret_cast< const QByteArray(*)>(_a[1]))); break;
        case 8: _t->jp_published(); break;
        case 9: _t->jp_error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        case 10: _t->do_publish_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::ServiceLocalPublisher::Error(*)>(_a[2]))); break;
        case 11: _t->jpe_published(); break;
        case 12: _t->jpe_error((*reinterpret_cast< QJDnsSharedRequest::Error(*)>(_a[1]))); break;
        case 13: _t->do_publish_extra_error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< XMPP::ServiceLocalPublisher::Error(*)>(_a[2]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData XMPP::JDnsServiceProvider::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsServiceProvider::staticMetaObject = {
    { &ServiceProvider::staticMetaObject, qt_meta_stringdata_XMPP__JDnsServiceProvider,
      qt_meta_data_XMPP__JDnsServiceProvider, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsServiceProvider::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsServiceProvider::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsServiceProvider::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsServiceProvider))
        return static_cast<void*>(const_cast< JDnsServiceProvider*>(this));
    return ServiceProvider::qt_metacast(_clname);
}

int XMPP::JDnsServiceProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = ServiceProvider::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    }
    return _id;
}
static const uint qt_meta_data_XMPP__JDnsProvider[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

static const char qt_meta_stringdata_XMPP__JDnsProvider[] = {
    "XMPP::JDnsProvider\0"
};

void XMPP::JDnsProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObjectExtraData XMPP::JDnsProvider::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject XMPP::JDnsProvider::staticMetaObject = {
    { &IrisNetProvider::staticMetaObject, qt_meta_stringdata_XMPP__JDnsProvider,
      qt_meta_data_XMPP__JDnsProvider, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &XMPP::JDnsProvider::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *XMPP::JDnsProvider::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *XMPP::JDnsProvider::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_XMPP__JDnsProvider))
        return static_cast<void*>(const_cast< JDnsProvider*>(this));
    if (!strcmp(_clname, "com.affinix.irisnet.IrisNetProvider/1.0"))
        return static_cast< XMPP::IrisNetProvider*>(const_cast< JDnsProvider*>(this));
    return IrisNetProvider::qt_metacast(_clname);
}

int XMPP::JDnsProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = IrisNetProvider::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
QT_END_MOC_NAMESPACE
