/****************************************************************************
** Meta object code from reading C++ file 'bsocket.cpp'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'bsocket.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_QTcpSocketSignalRelay[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
      12,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       6,       // signalCount

 // signals: signature, parameters, type, tag, flags
      23,   22,   22,   22, 0x05,
      35,   22,   22,   22, 0x05,
      47,   22,   22,   22, 0x05,
      62,   22,   22,   22, 0x05,
      74,   22,   22,   22, 0x05,
      95,   22,   22,   22, 0x05,

 // slots: signature, parameters, type, tag, flags
     131,   22,   22,   22, 0x0a,
     148,   22,   22,   22, 0x0a,
     165,   22,   22,   22, 0x0a,
     185,   22,   22,   22, 0x0a,
     204,  202,   22,   22, 0x0a,
     230,  202,   22,   22, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_QTcpSocketSignalRelay[] = {
    "QTcpSocketSignalRelay\0\0hostFound()\0"
    "connected()\0disconnected()\0readyRead()\0"
    "bytesWritten(qint64)\0"
    "error(QAbstractSocket::SocketError)\0"
    "sock_hostFound()\0sock_connected()\0"
    "sock_disconnected()\0sock_readyRead()\0"
    "x\0sock_bytesWritten(qint64)\0"
    "sock_error(QAbstractSocket::SocketError)\0"
};

void QTcpSocketSignalRelay::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        QTcpSocketSignalRelay *_t = static_cast<QTcpSocketSignalRelay *>(_o);
        switch (_id) {
        case 0: _t->hostFound(); break;
        case 1: _t->connected(); break;
        case 2: _t->disconnected(); break;
        case 3: _t->readyRead(); break;
        case 4: _t->bytesWritten((*reinterpret_cast< qint64(*)>(_a[1]))); break;
        case 5: _t->error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 6: _t->sock_hostFound(); break;
        case 7: _t->sock_connected(); break;
        case 8: _t->sock_disconnected(); break;
        case 9: _t->sock_readyRead(); break;
        case 10: _t->sock_bytesWritten((*reinterpret_cast< qint64(*)>(_a[1]))); break;
        case 11: _t->sock_error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData QTcpSocketSignalRelay::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject QTcpSocketSignalRelay::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QTcpSocketSignalRelay,
      qt_meta_data_QTcpSocketSignalRelay, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &QTcpSocketSignalRelay::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *QTcpSocketSignalRelay::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *QTcpSocketSignalRelay::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QTcpSocketSignalRelay))
        return static_cast<void*>(const_cast< QTcpSocketSignalRelay*>(this));
    return QObject::qt_metacast(_clname);
}

int QTcpSocketSignalRelay::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    }
    return _id;
}

// SIGNAL 0
void QTcpSocketSignalRelay::hostFound()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void QTcpSocketSignalRelay::connected()
{
    QMetaObject::activate(this, &staticMetaObject, 1, 0);
}

// SIGNAL 2
void QTcpSocketSignalRelay::disconnected()
{
    QMetaObject::activate(this, &staticMetaObject, 2, 0);
}

// SIGNAL 3
void QTcpSocketSignalRelay::readyRead()
{
    QMetaObject::activate(this, &staticMetaObject, 3, 0);
}

// SIGNAL 4
void QTcpSocketSignalRelay::bytesWritten(qint64 _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void QTcpSocketSignalRelay::error(QAbstractSocket::SocketError _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}
static const uint qt_meta_data_HappyEyeballsConnector[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      24,   23,   23,   23, 0x05,
      36,   23,   23,   23, 0x05,

 // slots: signature, parameters, type, tag, flags
      72,   23,   23,   23, 0x08,
      97,   87,   23,   23, 0x08,
     136,   23,   23,   23, 0x08,
     169,  156,   23,   23, 0x08,
     208,  206,   23,   23, 0x08,
     253,   23,   23,   23, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_HappyEyeballsConnector[] = {
    "HappyEyeballsConnector\0\0connected()\0"
    "error(QAbstractSocket::SocketError)\0"
    "qs_connected()\0errorCode\0"
    "qs_error(QAbstractSocket::SocketError)\0"
    "splitSrvResolvers()\0address,port\0"
    "handleDnsReady(QHostAddress,quint16)\0"
    "e\0handleDnsError(XMPP::ServiceResolver::Error)\0"
    "startFallback()\0"
};

void HappyEyeballsConnector::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        HappyEyeballsConnector *_t = static_cast<HappyEyeballsConnector *>(_o);
        switch (_id) {
        case 0: _t->connected(); break;
        case 1: _t->error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 2: _t->qs_connected(); break;
        case 3: _t->qs_error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 4: _t->splitSrvResolvers(); break;
        case 5: _t->handleDnsReady((*reinterpret_cast< const QHostAddress(*)>(_a[1])),(*reinterpret_cast< quint16(*)>(_a[2]))); break;
        case 6: _t->handleDnsError((*reinterpret_cast< XMPP::ServiceResolver::Error(*)>(_a[1]))); break;
        case 7: _t->startFallback(); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData HappyEyeballsConnector::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject HappyEyeballsConnector::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HappyEyeballsConnector,
      qt_meta_data_HappyEyeballsConnector, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &HappyEyeballsConnector::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *HappyEyeballsConnector::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *HappyEyeballsConnector::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_HappyEyeballsConnector))
        return static_cast<void*>(const_cast< HappyEyeballsConnector*>(this));
    return QObject::qt_metacast(_clname);
}

int HappyEyeballsConnector::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    }
    return _id;
}

// SIGNAL 0
void HappyEyeballsConnector::connected()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void HappyEyeballsConnector::error(QAbstractSocket::SocketError _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_END_MOC_NAMESPACE
