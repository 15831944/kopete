// This file is generated by kconfig_compiler from nowlisteningconfig.kcfg.
// All changes you do to this file will be lost.
#ifndef NOWLISTENINGCONFIG_H
#define NOWLISTENINGCONFIG_H

#include <klocale.h>

#include <kconfigskeleton.h>
#include <kdebug.h>

class NowListeningConfig : public KConfigSkeleton
{
  public:

    static NowListeningConfig *self();
    ~NowListeningConfig();

    /**
      Set Header of the message advertised.
    */
    static
    void setHeader( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Header" ) ))
        self()->mHeader = v;
    }

    /**
      Get Header of the message advertised.
    */
    static
    QString header()
    {
      return self()->mHeader;
    }

    /**
      Set Core of the message advertised.
    */
    static
    void setPerTrack( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "PerTrack" ) ))
        self()->mPerTrack = v;
    }

    /**
      Get Core of the message advertised.
    */
    static
    QString perTrack()
    {
      return self()->mPerTrack;
    }

    /**
      Set Conjunction when multiple track are playing.
    */
    static
    void setConjunction( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Conjunction" ) ))
        self()->mConjunction = v;
    }

    /**
      Get Conjunction when multiple track are playing.
    */
    static
    QString conjunction()
    {
      return self()->mConjunction;
    }

    /**
      Set Show explicitly the current music listened via a menu or /media command.
    */
    static
    void setExplicitAdvertising( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ExplicitAdvertising" ) ))
        self()->mExplicitAdvertising = v;
    }

    /**
      Get Show explicitly the current music listened via a menu or /media command.
    */
    static
    bool explicitAdvertising()
    {
      return self()->mExplicitAdvertising;
    }

    /**
      Set Show the current music listened in chat window.
    */
    static
    void setChatAdvertising( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ChatAdvertising" ) ))
        self()->mChatAdvertising = v;
    }

    /**
      Get Show the current music listened in chat window.
    */
    static
    bool chatAdvertising()
    {
      return self()->mChatAdvertising;
    }

    /**
      Set Show the current music listened in place of your status message.
    */
    static
    void setStatusAdvertising( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "StatusAdvertising" ) ))
        self()->mStatusAdvertising = v;
    }

    /**
      Get Show the current music listened in place of your status message.
    */
    static
    bool statusAdvertising()
    {
      return self()->mStatusAdvertising;
    }

    /**
      Set Show the current music listened appended to your status message.
    */
    static
    void setAppendStatusAdvertising( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "AppendStatusAdvertising" ) ))
        self()->mAppendStatusAdvertising = v;
    }

    /**
      Get Show the current music listened appended to your status message.
    */
    static
    bool appendStatusAdvertising()
    {
      return self()->mAppendStatusAdvertising;
    }

    /**
      Set Use the specified media player.
    */
    static
    void setUseSpecifiedMediaPlayer( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseSpecifiedMediaPlayer" ) ))
        self()->mUseSpecifiedMediaPlayer = v;
    }

    /**
      Get Use the specified media player.
    */
    static
    bool useSpecifiedMediaPlayer()
    {
      return self()->mUseSpecifiedMediaPlayer;
    }

    /**
      Set Selected Media Player for source of listening advertising.
    */
    static
    void setSelectedMediaPlayer( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "SelectedMediaPlayer" ) ))
        self()->mSelectedMediaPlayer = v;
    }

    /**
      Get Selected Media Player for source of listening advertising.
    */
    static
    int selectedMediaPlayer()
    {
      return self()->mSelectedMediaPlayer;
    }

  protected:
    NowListeningConfig();
    friend class NowListeningConfigHelper;


    // Now Listening Plugin
    QString mHeader;
    QString mPerTrack;
    QString mConjunction;
    bool mExplicitAdvertising;
    bool mChatAdvertising;
    bool mStatusAdvertising;
    bool mAppendStatusAdvertising;
    bool mUseSpecifiedMediaPlayer;
    int mSelectedMediaPlayer;

  private:
};

#endif

