// This file is generated by kconfig_compiler from webpresenceconfig.kcfg.
// All changes you do to this file will be lost.
#ifndef WEBPRESENCECONFIG_H
#define WEBPRESENCECONFIG_H

#include <kconfigskeleton.h>
#include <kdebug.h>

class WebPresenceConfig : public KConfigSkeleton
{
  public:

    static WebPresenceConfig *self();
    ~WebPresenceConfig();

    /**
      Set Delay in seconds before updating the file
    */
    static
    void setUploadFrequency( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UploadFrequency" ) ))
        self()->mUploadFrequency = v;
    }

    /**
      Get Delay in seconds before updating the file
    */
    static
    int uploadFrequency()
    {
      return self()->mUploadFrequency;
    }

    /**
      Set The URL where the file should be uploaded to
    */
    static
    void setUploadURL( const KUrl & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "uploadURL" ) ))
        self()->mUploadURL = v;
    }

    /**
      Get The URL where the file should be uploaded to
    */
    static
    KUrl uploadURL()
    {
      return self()->mUploadURL;
    }

    /**
      Set HTML formatting
    */
    static
    void setFormatHTML( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "formatHTML" ) ))
        self()->mFormatHTML = v;
    }

    /**
      Get HTML formatting
    */
    static
    bool formatHTML()
    {
      return self()->mFormatHTML;
    }

    /**
      Set XHTML formatting
    */
    static
    void setFormatXHTML( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "formatXHTML" ) ))
        self()->mFormatXHTML = v;
    }

    /**
      Get XHTML formatting
    */
    static
    bool formatXHTML()
    {
      return self()->mFormatXHTML;
    }

    /**
      Set XML formatting
    */
    static
    void setFormatXML( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "formatXML" ) ))
        self()->mFormatXML = v;
    }

    /**
      Get XML formatting
    */
    static
    bool formatXML()
    {
      return self()->mFormatXML;
    }

    /**
      Set XML transformation with a XSLT sheet
    */
    static
    void setFormatStylesheet( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "formatStylesheet" ) ))
        self()->mFormatStylesheet = v;
    }

    /**
      Get XML transformation with a XSLT sheet
    */
    static
    bool formatStylesheet()
    {
      return self()->mFormatStylesheet;
    }

    /**
      Set XSLT sheet
    */
    static
    void setFormatStylesheetURL( const KUrl & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "formatStylesheetURL" ) ))
        self()->mFormatStylesheetURL = v;
    }

    /**
      Get XSLT sheet
    */
    static
    KUrl formatStylesheetURL()
    {
      return self()->mFormatStylesheetURL;
    }

    /**
      Set Replace protocol text with images in (X)HTML
    */
    static
    void setUseImagesHTML( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "useImagesHTML" ) ))
        self()->mUseImagesHTML = v;
    }

    /**
      Get Replace protocol text with images in (X)HTML
    */
    static
    bool useImagesHTML()
    {
      return self()->mUseImagesHTML;
    }

    /**
      Set Use one of your IM names as display name
    */
    static
    void setShowName( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "showName" ) ))
        self()->mShowName = v;
    }

    /**
      Get Use one of your IM names as display name
    */
    static
    bool showName()
    {
      return self()->mShowName;
    }

    /**
      Set Use another name as display name
    */
    static
    void setShowAnotherName( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "showAnotherName" ) ))
        self()->mShowAnotherName = v;
    }

    /**
      Get Use another name as display name
    */
    static
    bool showAnotherName()
    {
      return self()->mShowAnotherName;
    }

    /**
      Set Desired display name
    */
    static
    void setShowThisName( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "showThisName" ) ))
        self()->mShowThisName = v;
    }

    /**
      Get Desired display name
    */
    static
    QString showThisName()
    {
      return self()->mShowThisName;
    }

    /**
      Set Include IM addresses
    */
    static
    void setIncludeIMAddress( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "includeIMAddress" ) ))
        self()->mIncludeIMAddress = v;
    }

    /**
      Get Include IM addresses
    */
    static
    bool includeIMAddress()
    {
      return self()->mIncludeIMAddress;
    }

  protected:
    WebPresenceConfig();
    friend class WebPresenceConfigHelper;


    // Web Presence Plugin
    int mUploadFrequency;
    KUrl mUploadURL;
    bool mFormatHTML;
    bool mFormatXHTML;
    bool mFormatXML;
    bool mFormatStylesheet;
    KUrl mFormatStylesheetURL;
    bool mUseImagesHTML;
    bool mShowName;
    bool mShowAnotherName;
    QString mShowThisName;
    bool mIncludeIMAddress;

  private:
};

#endif

