// This file is generated by kconfig_compiler from history2config.kcfg.
// All changes you do to this file will be lost.
#ifndef HISTORY2CONFIG_H
#define HISTORY2CONFIG_H

#include <kconfigskeleton.h>
#include <kdebug.h>

class History2Config : public KConfigSkeleton
{
  public:

    static History2Config *self();
    ~History2Config();

    /**
      Set Show previous messages in new chats.
    */
    static
    void setAuto_chatwindow( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Auto_chatwindow" ) ))
        self()->mAuto_chatwindow = v;
    }

    /**
      Get Show previous messages in new chats.
    */
    static
    bool auto_chatwindow()
    {
      return self()->mAuto_chatwindow;
    }

    /**
      Set Number of messages to show.
    */
    static
    void setNumber_Auto_chatwindow( uint v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Number_Auto_chatwindow" ) ))
        self()->mNumber_Auto_chatwindow = v;
    }

    /**
      Get Number of messages to show.
    */
    static
    uint number_Auto_chatwindow()
    {
      return self()->mNumber_Auto_chatwindow;
    }

    /**
      Set Number of messages per page
    */
    static
    void setNumber_ChatWindow( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Number_ChatWindow" ) ))
        self()->mNumber_ChatWindow = v;
    }

    /**
      Get Number of messages per page
    */
    static
    int number_ChatWindow()
    {
      return self()->mNumber_ChatWindow;
    }

    /**
      Set Color of messages
    */
    static
    void setHistory_color( const QColor & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "History_color" ) ))
        self()->mHistory_color = v;
    }

    /**
      Get Color of messages
    */
    static
    QColor history_color()
    {
      return self()->mHistory_color;
    }

    /**
      Set Style to use in history-browser.
    */
    static
    void setBrowserStyle( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "BrowserStyle" ) ))
        self()->mBrowserStyle = v;
    }

    /**
      Get Style to use in history-browser.
    */
    static
    QString browserStyle()
    {
      return self()->mBrowserStyle;
    }

  protected:
    History2Config();
    friend class History2ConfigHelper;


    // History2 Plugin
    bool mAuto_chatwindow;
    uint mNumber_Auto_chatwindow;
    int mNumber_ChatWindow;
    QColor mHistory_color;
    QString mBrowserStyle;

  private:
};

#endif

