// This file is generated by kconfig_compiler from urlpicpreview.kcfg.
// All changes you do to this file will be lost.
#ifndef URLPICPREVIEWCONFIG_H
#define URLPICPREVIEWCONFIG_H

#include <kconfigskeleton.h>
#include <kdebug.h>

class URLPicPreviewConfig : public KConfigSkeleton
{
  public:

    static URLPicPreviewConfig *self();
    ~URLPicPreviewConfig();

    /**
      Set Maximum number of Previews
    */
    static
    void setPreviewAmount( uint v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "PreviewAmount" ) ))
        self()->mPreviewAmount = v;
    }

    /**
      Get Maximum number of Previews
    */
    static
    uint previewAmount()
    {
      return self()->mPreviewAmount;
    }

    /**
      Set Should the image be scaled
    */
    static
    void setScaling( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "Scaling" ) ))
        self()->mScaling = v;
    }

    /**
      Get Should the image be scaled
    */
    static
    bool scaling()
    {
      return self()->mScaling;
    }

    /**
      Set Should the number of previews be restricted?
    */
    static
    void setPreviewRestriction( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "PreviewRestriction" ) ))
        self()->mPreviewRestriction = v;
    }

    /**
      Get Should the number of previews be restricted?
    */
    static
    bool previewRestriction()
    {
      return self()->mPreviewRestriction;
    }

    /**
      Set Scale images to the width
    */
    static
    void setPreviewScaleWidth( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "PreviewScaleWidth" ) ))
        self()->mPreviewScaleWidth = v;
    }

    /**
      Get Scale images to the width
    */
    static
    int previewScaleWidth()
    {
      return self()->mPreviewScaleWidth;
    }

  protected:
    URLPicPreviewConfig();
    friend class URLPicPreviewConfigHelper;


    // URLPicPreview Plugin
    uint mPreviewAmount;
    bool mScaling;
    bool mPreviewRestriction;
    int mPreviewScaleWidth;

  private:
};

#endif

