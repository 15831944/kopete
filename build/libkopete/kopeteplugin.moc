/****************************************************************************
** Meta object code from reading C++ file 'kopeteplugin.h'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../libkopete/kopeteplugin.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kopeteplugin.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_Kopete__Plugin[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       5,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: signature, parameters, type, tag, flags
      16,   15,   15,   15, 0x05,
      34,   15,   15,   15, 0x05,

 // slots: signature, parameters, type, tag, flags
      68,   51,   15,   15, 0x0a,

 // methods: signature, parameters, type, tag, flags
     121,   15,  116,   15, 0x02,
     146,   15,  116,   15, 0x02,

       0        // eod
};

static const char qt_meta_stringdata_Kopete__Plugin[] = {
    "Kopete::Plugin\0\0settingsChanged()\0"
    "readyForUnload()\0metaContact,data\0"
    "deserialize(MetaContact*,QMap<QString,QString>)\0"
    "bool\0showCloseWindowMessage()\0"
    "shouldExitOnclose()\0"
};

void Kopete::Plugin::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        Plugin *_t = static_cast<Plugin *>(_o);
        switch (_id) {
        case 0: _t->settingsChanged(); break;
        case 1: _t->readyForUnload(); break;
        case 2: _t->deserialize((*reinterpret_cast< MetaContact*(*)>(_a[1])),(*reinterpret_cast< const QMap<QString,QString>(*)>(_a[2]))); break;
        case 3: { bool _r = _t->showCloseWindowMessage();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 4: { bool _r = _t->shouldExitOnclose();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObjectExtraData Kopete::Plugin::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject Kopete::Plugin::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Kopete__Plugin,
      qt_meta_data_Kopete__Plugin, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &Kopete::Plugin::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *Kopete::Plugin::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *Kopete::Plugin::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_Kopete__Plugin))
        return static_cast<void*>(const_cast< Plugin*>(this));
    if (!strcmp(_clname, "KXMLGUIClient"))
        return static_cast< KXMLGUIClient*>(const_cast< Plugin*>(this));
    return QObject::qt_metacast(_clname);
}

int Kopete::Plugin::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 5)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    }
    return _id;
}

// SIGNAL 0
void Kopete::Plugin::settingsChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void Kopete::Plugin::readyForUnload()
{
    QMetaObject::activate(this, &staticMetaObject, 1, 0);
}
QT_END_MOC_NAMESPACE
